#include <iostream>
using namespace std;

char board[3][3]; // Papan permainan

// Inisialisasi papan permainan
void initBoard() {
    for (int row = 0; row < 3; row++) {
        for (int col = 0; col < 3; col++) {
            board[row][col] = '-';
        }
    }
}

// Menampilkan papan permainan
void displayBoard() {
    cout << "-------------" << endl;
    for (int row = 0; row < 3; row++) {
        for (int col = 0; col < 3; col++) {
            cout << "| " << board[row][col] << " ";
        }
        cout << "|" << endl;
        cout << "-------------" << endl;
    }
}

// Memeriksa apakah papan permainan penuh
bool isBoardFull() {
    for (int row = 0; row < 3; row++) {
        for (int col = 0; col < 3; col++) {
            if (board[row][col] == '-')
                return false;
        }
    }
    return true;
}

// Memeriksa apakah ada pemenang
char checkForWin() {
    // Memeriksa baris
    for (int row = 0; row < 3; row++) {
        if (board[row][0] != '-' && board[row][0] == board[row][1] && board[row][1] == board[row][2])
            return board[row][0];
    }

    // Memeriksa kolom
    for (int col = 0; col < 3; col++) {
        if (board[0][col] != '-' && board[0][col] == board[1][col] && board[1][col] == board[2][col])
            return board[0][col];
    }

    // Memeriksa diagonal utama
    if (board[0][0] != '-' && board[0][0] == board[1][1] && board[1][1] == board[2][2])
        return board[0][0];

    // Memeriksa diagonal kedua
    if (board[0][2] != '-' && board[0][2] == board[1][1] && board[1][1] == board[2][0])
        return board[0][2];

    return '-';
}

// Memainkan permainan Tic Tac Toe
void playGame() {
    char currentPlayer = 'X';
    int row, col;

    cout << "Selamat datang di permainan Tic Tac Toe!" << endl;
    cout << "Player 1 (X) - Player 2 (O)" << endl;

    initBoard();
    displayBoard();

    while (true) {
        cout << "Giliran Player " << currentPlayer << endl;
        cout << "Masukkan baris (0-2): ";
        cin >> row;
        cout << "Masukkan kolom (0-2): ";
        cin >> col;

        // Memeriksa apakah langkah valid
        if (row < 0 || row > 2 || col < 0 || col > 2 || board[row][col] != '-') {
            cout << "Langkah tidak valid. Coba lagi." << endl;
            continue;
        }

        // Menempatkan tanda pemain pada papan permainan
        board[row][col] = currentPlayer;

        // Menampilkan papan permainan yang diperbarui
        displayBoard();

        // Memeriksa apakah ada pemenang atau papan permainan penuh
        char winner = checkForWin();
        if (winner != '-' || isBoardFull()) {
            if (winner != '-')
                cout << "Player " << winner << " menang!" << endl;
            else
                cout << "Permainan berakhir dengan hasil seri." << endl;
            break;
        }

        // Ganti giliran pemain
        currentPlayer = (currentPlayer == 'X') ? 'O' : 'X';
    }
}

int main() {
    playGame();
    return 0;
}
